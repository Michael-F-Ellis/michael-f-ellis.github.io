title: About FQS

zoom: 130

youtube: icx52BLixaw

text: FQS is a musical notation system that makes music easier to read. This page is a
complete self-contained web app with no external dependencies. You can use it to
create, edit and display multiple scores using the simple text format (.fqs)
described in this reference. 
.
You can also map each line of notation to a specific starting time in a YouTube
recording of the piece and specify the play rate - typically to slow the
playback down for careful listening.
.
In case you're wondering, the name, FQS, comes from the initials of my three
grandchildren: Fiona, Quentin and Skylar.
EndOfScore
title: About this reference

zoom: 130

text: This reference is a "Book" of "Scores", albeit one with far more text than usual.
.
FQS Scores are one of more lines of music and text that define a piece of music.
.
FQS Books are collections of Scores, stored in a text format with the file extension
.fqs
.
Each Score, when rendered, includes editing capabilities that allow you alter the score
and/or create new one.
.
As you read this reference, I encourage you to use the editing capability to explore the
notation syntax and experiment with changes.
.
You can even save your own version of this reference using the Export button at the 
top of the page.
EndOfScore
title: Strengths and Limitations

zoom: 130

text: FQS is not a complete replacement for conventional music notation.
.
In particular, it has (as yet) no explicit support for polyphony (2 or 
more parts moving with different rhythms.) 
.
Secondly, it has (as yet)  no mechanism for aligning bar lines of multiple
lines of music as one would need for piano, orchestral or choral scores.
.
Neither of those limitations are insuperable, but it's not my intent to
take them on in the near future.
.
What FQS does very well is providing an alternative notation format for
voice and instruments that (mostly) play a single melody at a time.
.
The notation is a simple text-based language that renders in a
form that uses color to eliminate the need to worry about which note
note names are assigned to particular lines and spaces and which 
notes are altered by sharps and flats.
.
FQS is designed with computer and tablet screens in mind.
.
Conventional notation evolved over nearly 1000 years before the advent of 
modern technology. It is a polished and beautiful language, but the 
limitations of paper and ink in combination with the vast complexity of 
the musical forms it must represent create difficulties even for expert
musicians.
.
It's my belief that FQS is a valuable alternative that can reduce the
effort required to decipher and learn music from a notated source.
EndOfScore
title: Two Examples

zoom: 130

youtube: icx52BLixaw

text: Here's a simple example: the melody for Happy Birthday, set in E major.
Try playing it if you have your instrument handy. The red notes are sharped.

music: K#4 bb | c b e | d - bb | c b ^f | e - bb |
counter: 3
nomarkers:

music: K#4 ^b g e | d c ^aa | g e f | e - ; |
counter: 1
nomarkers:

text: Here's a more complex one: the first eight bars of the Sarabande from J. S. Bach's
third Cello Suite. You can click the speaker icon on either line to hear an excerpt from
a performance by Yo-Yo Ma. 
.
Click again to stop - unless you just want to bliss out on the remainder of
the suite!
.
Also notice the icon that looks like a treble clef on a conventional score.  Clicking
it will bring up an image of the score I used to transcribe this example. To close the
image, click the 'x' in the upper right corner.

music: K0 (/cgec) (/dc)--a b | (//cge&b) (fb)--g a | (/bd)-ef (/cgf)--d ef | cbca bd /gf |
counter: 1
play: 11:18 1
image: https://michael-f-ellis.github.io/fqs/sarabande.png 0.5

cue: 5
music: K0 (/ecg) (/ag)--e #fdfa | (//da#fc)--a (/gdc)--a cbag | (/#cga)-&bc (/db)-ac &e/#f | g (/gg) - |
counter: 1
play: 11:38 1

text: Feel free to click the pencil icons to see what input produced the notation.Then let's move
on to learning exactly how FQS represents music. You'll be seeing more from both these examples.
EndOfScore
title: The Title

zoom: 130

youtube: optional

text: Every score requires a title block. In addition to the name of the score,
the title block may include two other keyword items, 'zoom:' and 'youtube:'. 
.
If present, those items must be separated by blank lines.
.
Zoom controls the displayed size of the entire score. If omitted, the default is
100. Practical values range from about 75 to 150.  Most of the scores in this
reference use a zoom of 130. Click the pencil icon beside the title block and
try changing the zoom value to various values to get a feel for it.
.
Youtube allows you to specify a youtube video id that will be played starting
at specified timestamps that correspond to lines of music. You may specify only
one id per score, but each score may have its own youtube id. 
.
See the YouTube section of this reference for examples and usage instructions.
EndOfScore
title: The Staff

zoom: 130

text: The FQS staff has 4 lines. Each line represents a vertical span of 1 octave.

music: K0 g ^g ^g ^g | ////cdef gabc defg abcd  efga bcde |
nomarkers:

text: Compressed vertical spacing preserves melodic shape (like regular
notation), but allows 3 octaves to be displayed in a single stave.
.
The spacing is also 'true' in the sense that each semitone is rendered
exactly 1/12th of an octave higher than the next lower pitch
.
Clef signs are not necessary in FQS because, unlike conventional notation, the use 
of letters for pitches means you don't have to think of what note corresponds to a
a given line. 
.
You might be thinking, "How do I know which octaves the notes are in?" Good question!
The answer is to think about your instrument or vocal range and let the lowest line
correspond to the lowest "G" in the range. For a guitar in standard tuning, that's G2
(low E string, 3rd fret). For a flute, G4, and so on. The point is that you know your
instrument's limits and can interpret the octaves accordingly.

text: But what if I need more than three octaves? Or less?
A. Use the "staff:" keyword in the title block.  See below.
EndOfScore
title: Smaller staffs

zoom: 100

staff: 3

text: The staff: keyword takes a single number as an argument that specifies how
many octave lines to draw.  In this score, a value of 3 creates a 2 octave staff
sutable for many instrumental or vocal compositions.

cue: Two octave staff (suitable for many scores)
music: K0 /efga bcde | fgab cdef |
nomarkers:
EndOfScore
title: Huge staff

zoom: 100

staff: 8

text: You may have as many octaves as needed. Here's an extreme example.

cue: 7 octaves (full range of an 88 key piano)
music: K0 abcd efg; | abcd efg; | abcd efg; | abcd efg; | abcd efg; | abcd efg; | abcd efg; | abc; ; |
nomarkers:
EndOfScore
title: Editing

zoom: 130

text: The pencil icons beside each score item are your primary means of 
editing. Clicking the icon opens up a text area beneath the item containing 
the FQS input that creates the item.
.
Click the reload icon beside the editor when you want to see the effect of 
your changes.
.
Click the pencil icon again to close the editor.
.
There's a second editing option. Click the 'Toggle Edit Mode' button at the
top of the score to open a side-by-side view of the entire score.
.
This gives you access to the full text of the score. The tradeoff is that this
takes up half the screen, shrinking the score view. On the other hand, the
changes you make are rendered immediately as you type without requiring you to
click a reload icon.


EndOfScore
title: Sharps and flats

zoom: 130

cue: chromatic scale
music: K0 c#cd#def#fg#ga#abc | cb&ba&ag&gfe&ed&dc |
perbar: sharps_(red) flats_(blue)
nomarkers:

cue: FQS supports double flats (green) and double sharps (orange)
music: K0 &&f &f %f #f ##f |
pernote: ùÑ´ ‚ô≠ ‚ôÆ ‚ôØ ùÑ™
nomarkers:


EndOfScore
title: Key Signatures

zoom: 130

text: Key signatures are not displayed in FQS. They are, however,
required in the input notation. At least one is required at the beginning
of the first measure in each line or music, but you may change them at
the beginning of any measure. The use of color notation makes key signatures
unneeded, but you can easily add text annotations to indicate the intended
key.

music: K0 cdefgabc | K&3 /cdefgabc | K#4 /cdefgabc |
perbar: C_major C_minor C‚ôØ_minor
nomarkers:
EndOfScore
title: Octaves

zoom: 130

text: FQS determines the octave placement of each pitch relative to the pitch
immediately before it. By default, the new pitch will land in the the nearest octave
position.

music: K0 c g c f |
nomarkers:

text: In the example above, the input is "c g c f". The g below the c is closer than the
one above (musical 4th vs musical 5th) and the f above the c is closer than the one below.
.
In the next example, we use octave shifts, '^' and '/' to change the placements. The input
is "c ^g /c /f  |  ^c ^&g /c /#f |"
.
Note that octave shifts must appear BEFORE any sharps or flats and that sharps and flats are
not taken into consideration when calculating which octave is closest.

music: K0 c ^g /c /f | ^c ^&g /c /#f |
nomarkers:
EndOfScore
title: Rhythm

zoom: 130

text: FQS is beat oriented. You don't specify note durations. Instead, you tell
it how each beat is divided.
.
  Horizontal space separates beats.
  Pitches without space between them subdivide the beat equally.
  A dash ( - ) extends the previous pitch.
  A semicolon ( ; ) indicates a rest.
.
  Rhythm markers above the staff and beat counter annotations below the staff
  clarify the rhythm. Both are optional. 
.
  Rhythm markers appear by default, to suppress them, specify "nomarkers:" on 
  a separate line.
.
  Beat counter annotations are omitted by default. To display them, specify
  "counter: N" where N is the first beat number. Use 1 for N unless the line
  starts with a partial measure.

cue: durations (assuming 4/4 meter)
music: K0 c - - - | d - d - | e e e e | f ; g ; |
perbar: whole_note half_notes quarters with_rests
counter: 1

text: Note the hold (-) symbols above. They indicate when a note is sustained across
the next beat.
.
Note also that rhythm markers for holds and rests are rendered in shades that match
their symbols on the staff.

cue: Evenly divided beats
music: K0 ff ff ff ff | ggg ggg ggg ggg | aaaa aaaa aaaa aaaa |
perbar: eighths triplets sixteenths
counter: 1

text: Q. What about unevenly divided beats, like dotted eighth + sixteenth?
A. That deserves a section of it's own. See below.
EndOfScore
title: Uneven rhythms

zoom: 130

text: When a beat is unevenly divided, the vertical length of each rhythm marker
segment is proportional the fraction of the beat alloted to the pitch 
(or rest or sustain) below it.

cue: Uneven beat divisions 3:1, 1:3, 7:1
music: ^g--g gg-- g------g |
counter: 1




EndOfScore
title: Ties

zoom: 150

text: Notes that persist across beats are indicated by a '-' at the start of the following beat.

cue: Ties
music: | ab  -b - -c |
perbar: _ 2/2
counter: 1
EndOfScore
title: Tuplets

zoom: 130

text: Although it's possible to indicate tuplets that span one or more beats using
only hold symbols, FQS offers a neater alternative. You may precede a group
of notes with an integer number to indicate that it spans two or more beats.
.
In the example below:
  c occupies beat 1,
  def is a triplet that divides beat 2 into three notes
  gab is a triplet that spans 2 beats.
.
Notice that the spanning tuplet has a red 2 in front of its rhythm marker and
the markers are twice as long as the markers for beat 2.

music: K0 c def 2gab |
counter: 1

text: You can use tuplet notation to clarify (or obscure!) the intended rhythm.
Choose wisely.

cue: Same rhythm written 4 different ways
music: K0 | c de fg ab | /c 3defgab | 4/c-defgab | /c-de fgab |
perbar: 4/4 | | 2/2
counter: 1
EndOfScore
title: Chords

zoom: 100

text: To notate a chord, enclose 2 or more pitches in parentheses.
.
FQS alters the rules for octave placement in the body of a chord. Each
pitch in the body of a chord is assumed to be the next higher pitch from
the previous. This is done as a convenience, so that you can write
(cgec) instead of (c^g^e^c) for a chord in open voicing.
.
The normal rules for octave placement apply to the first note of a
chord and to the first note after a chord ends.

music: K#2 (dfa) (/bdf) (egb) (/ace) | (dafc) (//bfda) (/ebgd) (//aecg) | /dfa /bdf egb /ace | d^a^f^c //b^f^d^a /e^b^g^d //a^e^c^g |
perbar: These_are_chords _ These_are_arpeggios
counter: 1

text: Chords are rendered in a smaller, back-slanted font. Rhythmically, chords are treated
as single attacks.

cue: The chord in beat two is 3/4 of a beat long.
music: K0 (/cgec) (/dc)--a b |
counter: 1

text: See the Bach Cello example in the YouTube section for more examples
of mixing chords with linear melody.
EndOfScore
title: Partial Beats

zoom: 120

text: Partial beats are created by appending one or more with underscores, _ , to
a beat or beat tuplet.

text: Underscores reduce the beat duration. This is useful for:
. 
  ‚Ä¢ Pickup measures at the start of a piece
  ‚Ä¢ Turnarounds where a measure is split between the end and beginning of a repeated section
  ‚Ä¢ Uneven beat groupings in compound meters

cue: Pickup measure and turnaround example
music: K0 ^f_ ed | cb ag fe fg | ab cd e_ |
counter: 3

text: Note how the rhythm markers adjust their heights to show the relative durations.
Without the underscores, the pickup and turnaround durations would have been
incorrect, as in the following example.

cue: Pickup measure and turnaround example without underscores
music: K0 ^f ed | cb ag fe fg | ab cd e |
counter: 3

text: Underscores also work in lyrics.

cue: Pickup and turnaround with lyrics
pitch: K0 ^f ed | cb ag fe fg | ab cd e |
lyric: then_ it.goes | down* ** *.and turns.a  | round* ** *_ |
counter: 3

text: Uneven compound meters often use partial beats. Below, the underscore
helps create the 3+3+3+2 grouping pattern typical of 11/8 time.

cue: Uneven groupings (11/8 time)
music: K0 abc abc abc ac_ | abc abc abc ac_ |
perbar: 11/8
counter: 1

text: Rules for using underscores
  * Underscores can appear at the end of any beat
  * Underscores cannot appear at the beginning or within a beat
  * Chords in partial beats work normally, e.g. "(ceg)_"
  * Underscores affect the entire beat:
       ‚Ä¢ "a_" is half the duration of "a"
       ‚Ä¢ "abc__" is 3/5 the duration of "abc"
EndOfScore
title: YouTube Audio Playback

zoom: 130

youtube: icx52BLixaw

text: FQS supports synchronized playback from YouTube videos. To enable this:
.
1. Add a youtube keyword with the video ID at the start of your score, e.g.
.
   youtube: dQw4w9WgXcQ
. 
   The youtube keyword takes an optional second argument to specify the 
   default playback speed. Most YouTube music videos support 
   0.25, 0.5, 1.0, 1.5, or 2.0 as allowed playback speed values.
.
2. Add a play keyword to any music or pitch/lyric line group, e.g.
.
   play: 1:30 0.5
.  
  The play keyword takes two arguments:
     - Start time in minutes:seconds format (required)
     - Playback speed: 0.25, 0.5, 1.0, 1.5, or 2.0 (optional, defaults to 1.0)
      If given, line playback speed overrides the default speed.
.
Adding the play keyword causes a speaker icon, üîä, to appear beside the line to
let you know the line can be played.
.
Click the speaker icon beside a line to start playback from its specified time.
Click again to stop playback.
.
Tip: Set the start time a couple of seconds before the first measure in the line
to give yourself enough time to get ready to play the passage along with the
recording.
.
Here's a complete example. The recording is the Sarabande from J.S. Bach's Cello
Suite III in C Major, played in concert by Yo Yo Ma. Click either speaker icon
to start playback at that line.
.
Note: The groups of back-slanted notes are FQS's way of indicating chords.

cue: A section (player begins at repeat)
music: K0 (/cgec) (/dc)--a b | (//cge&b) (fb)--g a | (/bd)-ef (/cgf)--d ef | cbca bd /gf |
counter: 1
play: 11:18 1

cue: 5
music: K0 (/ecg) (/ag)--e #fdfa | (//da#fc)--a (/gdc)--a cbag | (/#cga)-&bc (/db)-ac &e/#f | g (/g^g) - |
counter: 1
play: 11:38 1

EndOfScore
title: Images

zoom: 130

text: FQS supports adding images to lines of music. This is mostly useful for
tutorials such as this reference. It can also be useful while transcribing from a
conventional score to be able to see a few lines while you work or to consult the
original while rehearsing.

music: K0 (/cgec) (/dc)--a b | (//cge&b) (fb)--g a | (/bd)-ef (/cgf)--d ef | cbca bd /gf |
counter: 1
image: https://michael-f-ellis.github.io/fqs/sarabande.png 0.5

text: The 'image:' keyword takes two values:
  - URL (required) Any valid URL that points to a PNG, JPEG, SVG or GIF image
  - scale (optional, defaults to 0.9) How wide the image should be as a fraction of
    the browser window width.
EndOfScore
title: Lyrics

zoom: 120

text: FQS also supports lyrics. Here's Happy Birthday again - this time in E‚ô≠ major.

pitch: K&3 bb | c b e | d bb | c b ^f | e bb |
lyric: Hap.py | birth day to | you -; Hap.py | birth day to | you -; Hap.py |
counter: 3
nomarkers:

pitch: K&3 ^b g e | d c ^aa | g e f | e |
lyric: birth day dear | NAME * Hap.py | birth day to | you - - |
counter: 1
nomarkers:

text: The second line above was created from the following 3 lines of text:
.
  pitch: K&3 ^b g e | d c ^aa | g e f | e |
  lyric: birth day dear | NAME * Hap.py | birth day to | you - - |
  counter: 1
.
Writing scores with lyrics requires specifying the pitches and lyrics on
separate lines. The corresponding keywords are "pitch:" and "lyric:"
. 
PITCH:
The syntax of the "pitch:" keyword is similar to that of the "music:" keyword
except that you omit hyphens and semicolons and it's not necessary to use spaces
between pitches within a bar.  
.
In fact, bar lines are also optional, but it's wise to include them for clarity 
and also, to ensure that accidentals cancel at the  end of each measure.
.
LYRIC:
The "lyric:" keyword contains the lyrics for the line, written in a special form
that determines the placement and duration of the pitches. FQS uses certain
punctation characters to accomplish this.
.
   A period ( . ) separates syllables that occupy the same beat. Writing Happy
   as 'Hap.py' tells FQS that the two syllables share a beat, each taking half.
.
   A hyphen, ( - ) indicates a syllable that is sustained for all or part of a
   beat and a semicolon ( ; ) is a rest.
.
   As a convenience, you may use an equal (=) sign as a shorthand for two
   successive hyphens (--).
EndOfScore
title: Chord Symbols

zoom: 130

text: FQS supports chord abbreviations. Chords can be placed on any beat.

chord: Em7 _ _ _ A7 _ _ _ Dmaj7
music: K#2 ^^g f e d | c b a g | f - - - |
counter: 1
nomarkers:

text: Chords can also be aligned with lyrics alone. (Very handy for songwriting.)

chord: Am7 _ _ _ Dm7 _ _ _ G7 _ _ _ Cmaj7
lyric: Fly -me to.the -moon | - ; let me | play -a mong.the -stars | - - ; ; |
counter: 1
nomarkers:
EndOfScore
title: Annotations

zoom: 130

text: You can add annotations at several levels of granularity. Text annotations, such
as this one, may contain multiple lines and paragraphs. The built-in annotations
for FQS work well, but you may find it easier to save the score to a pdf and use
a pdf editor to mark it up.

text: CUE - cue annotations are text in a small monospace font. They're limited
to one line of text.

cue: Cues, such as this one, may stand apart from the notation.

cue: You may also attach a cue to any line of notation.
music: K0 c d e f | g a b c |
nomarkers:

text: PER BAR - bar annotations attach to individual measures. They're useful
for indicating changes in meter, measure numbers, etc., but you can use them for
any text you want to tie to a particular measure.

music: K0 ^ggg ccc | a f c | ^ggg ccc | d b g |
perbar: 6/8 3/4 6/8 3/4

text: PER BEAT - beat annotations attach to individual beats. Useful for tempo
markings but, again, use them in whatever way is useful to you.

perbeat: mm=120 _ rall. _ ùÑê _a_tempo _ _ molto_rall.
pitch: K&3 ^b g e | d c ^aa | g e f | e |
lyric: birth day dear | NAME * Hap.py | birth day to | you - - |
counter: 1
nomarkers:

text: PER NOTE - note annotations attach to individual notes. Use them
as you wish. I tend to use them for dynamic markings.

pitch: K&3 ^b g e | d c ^aa | g e f | e |
lyric: birth day dear | NAME * Hap.py | birth day to | you - - |
pernote: mf cresc. _ _ _ ff
nomarkers:

text: FINGERING - finger annotations attach to individual notes above the staff.

finger: 0 4 1 -1 2 4
music: K0 ^g | c d e f | g - - - |
nomarkers:

text: EVERYTHING - Here's the last line of Happy Birthday once again, this time
with all possible annotation types.

cue: Everything
chord: Eb _ _ Ab _ _ Eb _ Bb7 Eb
perbeat: mm=120 _ rall. _ ùÑê _a_tempo _ _ molto_rall.
finger: | | 0 1 3
pitch: K&3 ^b g e | d c ^aa | g e f | e |
perbar: 3/4_Brightly
lyric: birth day dear | NAME * Hap.py | birth day to | you - - |
pernote: mf cresc. _ _ _ ff
counter: 1
EndOfScore
title: Notation Language Overview

zoom: 130

text: At the top level, FQS is a simple "keyword: values" language. The currently
defined keywords are:
.
  title:
  text:
  staff:
  cue:
  chord:
  counter:
  music:
  pitch:
  lyric:
  nomarkers:
  perbar:
  perbeat:
  pernote:
  finger:
  youtube:
  zoom:
. 
Some keywords are standalone. They must be separated by blank lines from each other.
These include title, text, staff, youtube, and zoom. Cue may also stand alone.
.
Text is the only multiline, standalone keyword, i.e. you may follow the first line
with an arbitrary number of text lines before terminating with a blank line.
.
The other keywords control the display of musical lines. They must be grouped together
without empty lines between, e.g.
.
  music:
  cue:
  chord:
  nomarkers:
  perbeat:
  perbar:
  pernote:
  finger:
  counter:
.
or
.
  lyric:
  pitch:
  cue:
  chord:
  nomarkers:
  perbeat:
  perbar:
  pernote:
  finger:
  counter:
.
The lyric and music keywords may not be present in the same group. The order of keywords
in each group is not important. The layout will be the same regardless of the order.
.
Each keyword may appear only once in each group.
EndOfScore
title: Syntax Summary

zoom: 130

text: FQS defines rhythm using the following characters for the 'music:'
and 'lyric:' keywords:
   ‚Ä¢ Barline: ( | ) separates measures.
   ‚Ä¢ Whitespace: separates beats.
   ‚Ä¢ Attack: ( * ) indicates the start of a note 
   ‚Ä¢ Sustain: ( - ) continues the note from the prior attack.'
   ‚Ä¢ Rest: ( ; ) semicolon indicates a rest.
   ‚Ä¢ Underscore: ( _ ) creates a partial beat
For the 'lyric:' keyword only:
   ‚Ä¢ Syllable: A group of contiguous letter indicates an attack.
   ‚Ä¢ Period: A period ( . ) separates syllables that fall in the same beat.

text: Pitch lines contain pitches, key signatures and barlines.
.
   Key signatures: 'K0' or K#|&[1-7], 
   K0 = C major, 
   K#1 = G major
   K#2 = D major
   K&1 = F major
   K&2 = B-flat major
   etc...
.
   A pitch is a letter, [a-g], optionally preceded by sharp (#), flat (&) or 
   natural (%) indicators, optionally preceded by octave indicators (^) up, or
   (/) down.
.
   Examples:
       c : C, possibly altered by key signature or prior accidental.
      %c : C natural, always.
      #d : D-sharp
     ##e : E-double-sharp
      &f : F-flat
     &&g : G-double-flat
     /&a : A-flat one octave lower
     ^&b : B-flat one octave higher
    //#c : C-sharp, two octaves lower
.
Octave marks and accidentals PRECEDE the pitch, so '/#c', NOT '/c#'' or 'c#/''
.
With the 'pitch:' keyword,  whitespace is not  significant between pitches.
'c d e f' is the same as 'cdef'. This is NOT true with the 'music:' keyword
because it also defines the rhythm and needs whitespace to separate beats.
.
Barlines are needed so altered pitches cancel at end of measure.

text: ANNOTATIONS (all optional):
    chord: chord symbols aligned to beats
    counter: displays small beat numbers below the start of each beat. takes
      an integer argument to specify the beat number to start at (for 
      partial measures.)
    cue: A line of text you want to appear as a cue.  Cues may be attached to
         the notation or stand alone if followed by a blank line.
    perbar: Items aligned to barlines, e.g. time signatures
    perbeat: Items aligned to beats, e.g. tempo markings
    pernote: Items aligned to attacks, e.g. dynamic markings
    finger: Fingering numbers. Rendered in tiny font above the staff.
.
    LAYOUT CHARACTERS:
    In perbar, perbeat, pernote and finger annotations, the underscore (_) and
    barline (|) are treated specially.
.
    Underscores ( _ ) are used to skip beats, barlines, or attacks in
    annotations. For example: "perbar: a_tempo _ molto_rall." puts 'a tempo' at
    the first measure and 'molto rall.' at the third measure.
.   
    Barlines ( | ) advance the layout to the next barline. This is particularly
    useful in per note annotations to reduce the number of underscores needed to
    correctly place an annotation. See the input for the example below.

music: K0 ^^g f e d | c b a g | f e d b | c - - - |
pernote: a_tempo | _ cresc. | molto_rall.
nomarkers:
EndOfScore
